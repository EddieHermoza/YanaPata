
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_DB")
}

model Servicio{
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  nombre String
  descrip String
  foto String @default("Pendiente")
  estado String @default("Habilitado")
  precio_min Decimal @db.Decimal(10,2)
  citas Cita[]
  comentarios Comentario[]
  pagos Pago[]
}

model Usuario{
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  supabaseId String? @default(uuid())
  nombres String
  apellidos String
  email String @unique
  password String
  rol String
  estado String @default("Habilitado")
  cliente Cliente? 
}

model Cliente{
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  usuario Usuario @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usuario_id Int @unique 
  telefono String
  mascotas Mascota[]
  citas Cita[]
  comentarios Comentario[]
}

model Mascota{
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  cliente Cliente @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cliente_id Int
  nombre String
  tipo String
  raza String
  sexo String
  altura String
  peso Decimal? @db.Decimal(10,2)
  ultima_cita DateTime?
  foto String @default("Pendiente")
  citas Cita[]
}


model Cita {
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  fechaSolicitud String
  horaSolicitud String
  nombreMascota String
  nombreCliente String
  ClienteInfo Json?
  MascotaInfo Json?
  cliente Cliente? @relation(fields: [cliente_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  cliente_id Int?
  mascota Mascota? @relation(fields: [mascota_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  mascota_id Int? 
  servicio Servicio @relation(fields: [servicio_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicio_id Int 
  asunto String
  estado String @default("PENDIENTE")
}

model Comentario{
  id Int @id @default(autoincrement())
  creacion DateTime @default(now())
  modificacion DateTime @updatedAt
  confirmacion DateTime
  calificacion Int
  mensaje String
  estado String @default("Habilitado")
  servicio Servicio @relation(fields: [servicio_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicio_id Int
  cliente Cliente @relation(fields: [cliente_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  cliente_id Int
}

model Pago {
  id               Int       @id @default(autoincrement())
  creacion         DateTime  @default(now())
  nombreCliente    String
  monto_servicio  Decimal?  @db.Decimal(10,2)
  monto_adicional  Decimal?  @db.Decimal(10,2)
  monto_total  Decimal?  @db.Decimal(10,2)
  igv              Decimal?  @db.Decimal(10,2)
  servicio         Servicio  @relation(fields: [servicio_id], references: [id])
  servicio_id      Int
}